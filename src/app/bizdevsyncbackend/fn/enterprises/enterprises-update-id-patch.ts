/* tslint:disable */
/* eslint-disable */
/* Code generated by ng-openapi-gen DO NOT EDIT. */

import { HttpClient, HttpContext, HttpResponse } from '@angular/common/http';
import { Observable } from 'rxjs';
import { filter, map } from 'rxjs/operators';
import { StrictHttpResponse } from '../../strict-http-response';
import { RequestBuilder } from '../../request-builder';


export interface EnterprisesUpdateIdPatch$Params {

/**
 * The ID of the enterprise to update
 */
  id: string;
      body?: {

/**
 * Enterprise name
 */
'name'?: string;

/**
 * Enterprise sector
 */
'sector'?: string;

/**
 * Enterprise email domain
 */
'email_domain'?: string;

/**
 * Enterprise website URL
 */
'website'?: string;

/**
 * Enterprise contact email
 */
'contact_email'?: string;

/**
 * Enterprise physical address
 */
'address'?: string;

/**
 * Enterprise country identifier
 */
'country'?: string;
'logo'?: Blob;
}
}

export function enterprisesUpdateIdPatch(http: HttpClient, rootUrl: string, params: EnterprisesUpdateIdPatch$Params, context?: HttpContext): Observable<StrictHttpResponse<{
'message'?: string;
'data'?: {
};
}>> {
  const rb = new RequestBuilder(rootUrl, enterprisesUpdateIdPatch.PATH, 'patch');
  if (params) {
    rb.path('id', params.id, {});
    rb.body(params.body, 'multipart/form-data');
  }

  return http.request(
    rb.build({ responseType: 'json', accept: 'application/json', context })
  ).pipe(
    filter((r: any): r is HttpResponse<any> => r instanceof HttpResponse),
    map((r: HttpResponse<any>) => {
      return r as StrictHttpResponse<{
      'message'?: string;
      'data'?: {
      };
      }>;
    })
  );
}

enterprisesUpdateIdPatch.PATH = '/enterprises/update/{id}';
