/* tslint:disable */
/* eslint-disable */
/* Code generated by ng-openapi-gen DO NOT EDIT. */

import { HttpClient, HttpContext, HttpResponse } from '@angular/common/http';
import { Observable } from 'rxjs';
import { filter, map } from 'rxjs/operators';
import { StrictHttpResponse } from '../../strict-http-response';
import { RequestBuilder } from '../../request-builder';


export interface LeadsUpdateIdPut$Params {
  id: number;
      body: {
'name'?: string;
'description'?: string;
'country'?: string;
'activitySector'?: string;
'assigned_to_user_id'?: number;
'website'?: string;
'status'?: string;
'email'?: string;
'telephone'?: string;
'address'?: string;
'town'?: string;
'tags'?: string;
'is_private'?: string;
'source'?: number;
'lead_value'?: number;
'last_activity'?: string;
'date_assigned'?: string;
'last_status_change'?: string;
'date_converted'?: string;
}
}

export function leadsUpdateIdPut(http: HttpClient, rootUrl: string, params: LeadsUpdateIdPut$Params, context?: HttpContext): Observable<StrictHttpResponse<void>> {
  const rb = new RequestBuilder(rootUrl, leadsUpdateIdPut.PATH, 'put');
  if (params) {
    rb.path('id', params.id, {});
    rb.body(params.body, 'application/json');
  }

  return http.request(
    rb.build({ responseType: 'text', accept: '*/*', context })
  ).pipe(
    filter((r: any): r is HttpResponse<any> => r instanceof HttpResponse),
    map((r: HttpResponse<any>) => {
      return (r as HttpResponse<any>).clone({ body: undefined }) as StrictHttpResponse<void>;
    })
  );
}

leadsUpdateIdPut.PATH = '/leads/update/{id}';
