/* tslint:disable */
/* eslint-disable */
/* Code generated by ng-openapi-gen DO NOT EDIT. */

import { HttpClient, HttpContext, HttpResponse } from '@angular/common/http';
import { Observable } from 'rxjs';
import { filter, map } from 'rxjs/operators';
import { StrictHttpResponse } from '../../strict-http-response';
import { RequestBuilder } from '../../request-builder';

import { Plan } from '../../models/plan';

export interface PlansPost$Params {
      body: {

/**
 * Name of the plan
 */
'title': string;

/**
 * Label color for UI badge (e.g. '#FF0000')
 */
'labelcolor'?: string;

/**
 * Name of the icon for UI
 */
'iconname'?: string;

/**
 * Price of the plan
 */
'price': number;
'is_featured'?: number;
'is_recommended'?: number;
'is_trial'?: number;

/**
 * Validity period in days
 */
'days'?: number;
'trial_days'?: number;

/**
 * JSON string containing feature limits and access (e.g. '{"leads_limit":"200"}')
 */
'data'?: string;
}
}

export function plansPost(http: HttpClient, rootUrl: string, params: PlansPost$Params, context?: HttpContext): Observable<StrictHttpResponse<Plan>> {
  const rb = new RequestBuilder(rootUrl, plansPost.PATH, 'post');
  if (params) {
    rb.body(params.body, 'application/json');
  }

  return http.request(
    rb.build({ responseType: 'json', accept: 'application/json', context })
  ).pipe(
    filter((r: any): r is HttpResponse<any> => r instanceof HttpResponse),
    map((r: HttpResponse<any>) => {
      return r as StrictHttpResponse<Plan>;
    })
  );
}

plansPost.PATH = '/plans';
