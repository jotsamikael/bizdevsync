/* tslint:disable */
/* eslint-disable */
/* Code generated by ng-openapi-gen DO NOT EDIT. */

import { HttpClient, HttpContext, HttpResponse } from '@angular/common/http';
import { Observable } from 'rxjs';
import { filter, map } from 'rxjs/operators';
import { StrictHttpResponse } from '../../strict-http-response';
import { RequestBuilder } from '../../request-builder';

import { Product } from '../../models/product';

export interface ProductsGetAllByIdCategoryIdGet$Params {
  categoryId: number;
  page?: number;
  limit?: number;
}

export function productsGetAllByIdCategoryIdGet(http: HttpClient, rootUrl: string, params: ProductsGetAllByIdCategoryIdGet$Params, context?: HttpContext): Observable<StrictHttpResponse<{
'count'?: number;
'rows'?: Array<Product>;
}>> {
  const rb = new RequestBuilder(rootUrl, productsGetAllByIdCategoryIdGet.PATH, 'get');
  if (params) {
    rb.path('categoryId', params.categoryId, {});
    rb.query('page', params.page, {});
    rb.query('limit', params.limit, {});
  }

  return http.request(
    rb.build({ responseType: 'json', accept: 'application/json', context })
  ).pipe(
    filter((r: any): r is HttpResponse<any> => r instanceof HttpResponse),
    map((r: HttpResponse<any>) => {
      return r as StrictHttpResponse<{
      'count'?: number;
      'rows'?: Array<Product>;
      }>;
    })
  );
}

productsGetAllByIdCategoryIdGet.PATH = '/products/get-all-by-id/{categoryId}';
