/* tslint:disable */
/* eslint-disable */
/* Code generated by ng-openapi-gen DO NOT EDIT. */

import { HttpClient, HttpContext } from '@angular/common/http';
import { Injectable } from '@angular/core';
import { Observable } from 'rxjs';
import { map } from 'rxjs/operators';

import { BaseService } from '../base-service';
import { ApiConfiguration } from '../api-configuration';
import { StrictHttpResponse } from '../strict-http-response';

import { Source } from '../models/source';
import { sourcesCreatePost } from '../fn/sources/sources-create-post';
import { SourcesCreatePost$Params } from '../fn/sources/sources-create-post';

@Injectable({ providedIn: 'root' })
export class SourcesService extends BaseService {
  constructor(config: ApiConfiguration, http: HttpClient) {
    super(config, http);
  }

  /** Path part for operation `sourcesCreatePost()` */
  static readonly SourcesCreatePostPath = '/sources/create';

  /**
   * Create a new source.
   *
   *
   *
   * This method provides access to the full `HttpResponse`, allowing access to response headers.
   * To access only the response body, use `sourcesCreatePost()` instead.
   *
   * This method sends `application/json` and handles request body of type `application/json`.
   */
  sourcesCreatePost$Response(params: SourcesCreatePost$Params, context?: HttpContext): Observable<StrictHttpResponse<Source>> {
    return sourcesCreatePost(this.http, this.rootUrl, params, context);
  }

  /**
   * Create a new source.
   *
   *
   *
   * This method provides access only to the response body.
   * To access the full response (for headers, for example), `sourcesCreatePost$Response()` instead.
   *
   * This method sends `application/json` and handles request body of type `application/json`.
   */
  sourcesCreatePost(params: SourcesCreatePost$Params, context?: HttpContext): Observable<Source> {
    return this.sourcesCreatePost$Response(params, context).pipe(
      map((r: StrictHttpResponse<Source>): Source => r.body)
    );
  }

}
